\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}

\section{Introduction}

In this tutorial we will explore the ways of presenting simple kinetic data and calcualting kinetic parameters from that data. Starting with the ideal case, we will then demonstrate the effect of experimental errors on the determination of the kinetic parameters using each of the methods.

\subsection{The ideal model}

A simple kinetic reaction follows the formula 
$V = \frac{V_{max}\cdot[S]}{K_m+[S]}$

We can set the $V_{max}$ and $K_m$ to appropriate values and calculate the observed velocity $V$ at each value of the substrate concentration $[S]$. 

With $V_{max}$ set to 100 and $K_m$ to 5 we can calculate the effective rate for values of the substrate concentration from 0 to 50 using a standard serial dilution.

<<>>=
vmax <- 100
km <- 50
substrate <- c(0,1, 2, 5, 10, 20, 50, 100, 200 ,500)
velocity <- vmax*substrate/(substrate+km)
@

The velocity can then be plotted in several ways. The simplest way is to plot the rate against the substrate concentration. The dotted line indicates $V_{max}$

<<label=SVplot1, include=FALSE>>=
plot(velocity~substrate, xlab="[S]", ylab="V", type='l',ylim=c(0,100))
points(velocity~substrate)
abline(h=100, lty=3)
@


\begin{center}
<<label=fig1, fig=TRUE, echo=FALSE>>=
<<SVplot1>>
@

\end{center}

It is hard to estimate the $Km$ or $Vmax$ from such plots so typically we transform the data to a straight line, fit the straight line and use this to determine the $K_m$ and $V_{max}$. 

Traditionally students would use the Lineweaver-Burke plot. This is the reciprocalof the previous plot.

<<label=LBplot1, include=FALSE>>=
plot(1/substrate[-1],1/velocity[-1], xlab="1/[S]", ylab="1/V", type='l',main="Lineweaver-Burke plot")
points(1/substrate[-1],1/velocity[-1])
@


\begin{center}
<<label=fig1, fig=TRUE, echo=FALSE>>=
<<LBplot1>>
@

\end{center}

Zooming in on the Y axis:

<<label=LBplot1a, include=FALSE>>=
plot(1/substrate[5:10],1/velocity[5:10], xlab="1/[S]", ylab="1/V", type='l', xlim=c(0,0.1), ylim=c(0,0.07),main="Lineweaver-Burke plot")
points(1/substrate[5:10],1/velocity[5:10])
@


\begin{center}
<<label=fig1, fig=TRUE, echo=FALSE>>=
<<LBplot1a>>
@
\end{center}
Extending theline to intercept the X-axis gives $1/V_{max}$ as the Y intercept and $-1/K_m$ as the X intercept.

<<label=LBplot1b, include=FALSE>>=
plot(c(-1/km, 1/substrate[5]), c(0, 1/velocity[5]), col=2, type='l', xlab="1/[S]", ylab="1/V",xlim=c(-1/km,0.1), ylim=c(0,0.07),main="Lineweaver-Burke plot")
lines(1/substrate[5:10],1/velocity[5:10] )
points(1/substrate[5:10],1/velocity[5:10] )
abline(v=0,lty=2)
abline(h=1/vmax, lty=3)
@


\begin{center}
<<label=fig1, fig=TRUE, echo=FALSE>>=
<<LBplot1b>>
@
\end{center}
Alternative transformations which are less susceptibel to errors are the Eadie-Hoftzee plot and the Haynes-Woolf plot.

Eadie-Hoftzee plots the velocity against the velocity divided by the substrate concentration. This gives a straight line of the form $v=-K_m \frac{v}{[S]} + V_{max}$ where $v$ is the y-axis, $\frac{v}{[S]}$ is the x-axis, the intercept is $V_{max}$ and the gradient is $-K_m$. Again, the line can be extrapolated to give the intercept as indicated by the red line.


<<label=EHplot1, include=FALSE>>=
plot(c(0,vmax/km),c(vmax,0), col=2, xlab="V/[S]", ylab="V", type='l', xlim=c(0,2), ylim=c(0,100), main="Eadie-Hoftzee plot")
lines(velocity[-1]/substrate[-1],velocity[-1] )
points(velocity[-1]/substrate[-1],velocity[-1] )
@

\begin{center}
<<label=fig1, fig=TRUE, echo=FALSE>>=
<<EHplot1>>
@
\end{center}

The Haynes-Woolf plot is possibly the most accurate of the linear transformations. Dividing the substrate concentration by the velocity, and plotting this against the substrate concentration gives a plot which looks superficially like a Lineweaver-Burke plot but does not fall prey to the same reciprocal error scaling.

The graph forms a straight line according to the equation $\frac{[S]}{v}= \frac{1}{V_{max}}[S]+\frac{K_m}{V_{max}}$. Like the Lineweaver-Burke plot, the line can be extended through the y-axis to intercept the x-axis at $-K_m$, the y-axis intercept being at $\frac{K_m}{V_{max}}$.


<<label=HWplot1, include=FALSE>>=
plot(c(-km,substrate[10]),c(0,substrate[10]/velocity[10]), col=2, xlab="[S]", ylab="[S]/V", type='l',  main="Haynes-Woolf plot")
lines(substrate[-1],substrate[-1]/velocity[-1] )
points(substrate[-1],substrate[-1]/velocity[-1] )
abline(v=0, lty=2)
abline(h=km/vmax,lty=3)
@

\begin{center}
<<label=fig1, fig=TRUE, echo=FALSE>>=
<<HWplot1>>
@
\end{center}

With modern computers, fitting the experimental data directly is a good idea as the transformations amplify errors in the data. 

\subsection{Introducing experimental errors}

Errors can be introduced into an experiment in many ways and fall into several categories. We will include fixed errors (which may be found in for example machine reading variation) and proprotional errors such as those found in pipetting or errors in fixed time measurement when measuring rates.

We will implement these using the jitter() function.

<<>>=
fixederror <- velocity-jitter(velocity, factor=2)
variableerror <-velocity*(velocity-jitter(velocity, factor=0.2))
@

We can combine these errors and build a table of experimental values. Each time jitter() is called it produces a new random distribution of errors. These values will be saved in a table of substrate (column 1) and velocity measurement (column 2)

<<>>=
experiment <-cbind(substrate[-1],jitter(velocity[-1], factor=2)+(velocity[-1]*(velocity[-1]-jitter(velocity[-1],factor=0.2))))
experiment <- rbind(experiment, cbind(substrate[-1],jitter(velocity[-1], factor=2)+(velocity[-1]*(velocity[-1]-jitter(velocity[-1],factor=0.2)))))
@
<<echo=FALSE>>=
experiment <- rbind(experiment, cbind(substrate[-1],jitter(velocity[-1], factor=2)+(velocity[-1]*(velocity[-1]-jitter(velocity[-1],factor=0.2)))))
experiment <- rbind(experiment, cbind(substrate[-1],jitter(velocity[-1], factor=2)+(velocity[-1]*(velocity[-1]-jitter(velocity[-1],factor=0.2)))))
experiment <- rbind(experiment, cbind(substrate[-1],jitter(velocity[-1], factor=2)+(velocity[-1]*(velocity[-1]-jitter(velocity[-1],factor=0.2)))))
experiment <- rbind(experiment, cbind(substrate[-1],jitter(velocity[-1], factor=2)+(velocity[-1]*(velocity[-1]-jitter(velocity[-1],factor=0.2)))))
experiment <- rbind(experiment, cbind(substrate[-1],jitter(velocity[-1], factor=2)+(velocity[-1]*(velocity[-1]-jitter(velocity[-1],factor=0.2)))))
experiment <- rbind(experiment, cbind(substrate[-1],jitter(velocity[-1], factor=2)+(velocity[-1]*(velocity[-1]-jitter(velocity[-1],factor=0.2)))))
experiment <- rbind(experiment, cbind(substrate[-1],jitter(velocity[-1], factor=2)+(velocity[-1]*(velocity[-1]-jitter(velocity[-1],factor=0.2)))))
experiment <- rbind(experiment, cbind(substrate[-1],jitter(velocity[-1], factor=2)+(velocity[-1]*(velocity[-1]-jitter(velocity[-1],factor=0.2)))))
experiment <- rbind(experiment, cbind(substrate[-1],jitter(velocity[-1], factor=2)+(velocity[-1]*(velocity[-1]-jitter(velocity[-1],factor=0.2)))))
experiment <- rbind(experiment, cbind(substrate[-1],jitter(velocity[-1], factor=2)+(velocity[-1]*(velocity[-1]-jitter(velocity[-1],factor=0.2)))))
experiment <- rbind(experiment, cbind(substrate[-1],jitter(velocity[-1], factor=2)+(velocity[-1]*(velocity[-1]-jitter(velocity[-1],factor=0.2)))))
experiment <- rbind(experiment, cbind(substrate[-1],jitter(velocity[-1], factor=2)+(velocity[-1]*(velocity[-1]-jitter(velocity[-1],factor=0.2)))))
experiment <- rbind(experiment, cbind(substrate[-1],jitter(velocity[-1], factor=2)+(velocity[-1]*(velocity[-1]-jitter(velocity[-1],factor=0.2)))))
@

The latter line can be repeated to give us as many replicates as we want. In this case we will repeat 15 times.



\end{document}